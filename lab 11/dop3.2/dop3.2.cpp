#include <iostream>//подключаем библиотеку
using namespace std;//чтобы не писать каждый раз std
int main()//объявляем функцию
{
	setlocale(LC_ALL, "RU");//подключаем кириллицу
	char tmp[33];//объявление переменной для хранения двоичных строк
	int A, B, n, m;
	cout << "Введите число A=";
	cin >> A;//вводим число А
	cout << "Введите число B=";
	cin >> B;//вводим число В
	cout << "Ввести позицию n: ";
	cin >> n;//вводим позицию n
	cout << "Ввести позицию m: ";
	cin >> m;//вводим позицию m
	_itoa_s(A, tmp, 2);//преобразуем число A в двоичную форму и сохраняем в tmp
	cout << "A=" << tmp << endl;
	_itoa_s(B, tmp, 2);//преобразуем число B в двоичную форму и сохраняем в tmp
	cout << "B=" << tmp << endl;
	int maskA = ((1 << 3) - 1) << n;//создаем маску А, которая выделяет 3 бита из позиции n
	_itoa_s(maskA, tmp, 2);//преобразуем маску А в двоичную форму и сохраняем в tmp
	cout << "Маска А: " << tmp << endl;
	int bitsA = (A & maskA) >> n;//извлечение битов из А и сдвиг их вправо на n позиций
	_itoa_s(bitsA, tmp, 2);//преобрахование извлеченный битов из А в двоичную строку и сохраняем в tmp
	cout << "Извлеченные биты из числа А: " << tmp << endl;
	int maskB = ((1 << 3) - 1) << m;//создание маски, которая определяет позицию для вставки битов в В
	_itoa_s(maskB, tmp, 2);//преобразуем маску В в двоичную форму и сохраняем в tmp
	cout << "Маска B: " << tmp << endl;
	B &= ~maskB;//сброс битов в В с помощью битовой операции "и не"
	B |= (bitsA << m);//вставка битов из А в В с помощью побитовой операции "или"
	_itoa_s(B, tmp, 2);//преобразуем число B в двоичную форму и сохраняем в tmp
	cout << "Новое В: " << tmp << endl;//выводим новое В
}